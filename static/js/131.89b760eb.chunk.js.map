{"version":3,"file":"static/js/131.89b760eb.chunk.js","mappings":"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","sources":["components/Forms/InputTypes/InputText/InputText.jsx","components/Forms/InputTypes/InputTextarea/InputTextarea.jsx","webpack://uniux/./src/components/Forms/InputTypes/InputRadio/InputRadio.module.scss?cb34","components/Forms/InputTypes/InputRadio/InputRadio.jsx","components/Forms/InputTypes/InputCheckbox/InputCheckbox.jsx","webpack://uniux/./src/components/Forms/InputTypes/InputSelect/InputSelect.module.scss?b8d9","components/Forms/InputTypes/InputSelect/InputSelect.jsx","webpack://uniux/./src/components/Forms/Form/Form.module.scss?ad60","components/Forms/Form/Form.jsx","components/Forms/Input/Input.jsx","components/Forms/LoginForm/LoginForm.jsx","components/Forms/RegisterForm/RegisterForm.jsx","components/Forms/ResetPasswordForm/ResetPasswordForm.jsx","components/Forms/AddNewProjectForm/AddNewProjectForm.jsx","webpack://uniux/./src/components/Forms/AddTaskForm/AddTaskForm.module.scss?9e7e","components/Forms/AddTaskForm/AddTaskForm.jsx","components/Forms/ProfileForm/ProfileForm.jsx","webpack://uniux/./src/components/Forms/AvatarForm/AvatarForm.module.scss?a376","components/Forms/AvatarForm/AvatarForm.jsx","webpack://uniux/./src/components/Forms/Fieldset/Fieldset.module.scss?ad09","components/Forms/Fieldset/Fieldset.jsx","webpack://uniux/./src/components/Forms/FormContainer/FormContainer.module.scss?3f2d","components/Forms/FormContainer/FormContainer.jsx","webpack://uniux/./src/components/Forms/SearchForm/SearchForm.module.scss?be87","utils/changeQueryString.js","components/Forms/SearchForm/SearchForm.jsx","webpack://uniux/./src/components/Forms/SortForm/SortForm.module.scss?5347","components/Forms/SortForm/SortForm.jsx","webpack://uniux/./src/components/Forms/CopyLink/CopyLink.module.scss?5744","components/Forms/CopyLink/CopyLink.jsx","webpack://uniux/./src/components/Forms/ChangeTaskNameForm/ChangeTaskNameForm.module.scss?9887","components/Forms/ChangeTaskNameForm/ChangeTaskNameForm.jsx","utils/debounce.js","utils/formFunctions.js","webpack://uniux/./src/components/Forms/InputTypes/InputText/InputText.module.scss?903f"],"sourcesContent":["import css from './InputText.module.scss';\n\nconst InputText = ({ type, name, value, label, required, placeholder, min, max, onChange, disabled = false, autoComplete }) => {\n  return (\n    <label className={css.Label}>\n      {label && <span className={css.LabelText}>{label}</span>}\n      <span className={css.LabelInput}>\n        <input\n          type={type}\n          className={css.Input}\n          name={name}\n          value={value}\n          required={required}\n          placeholder={placeholder}\n          onChange={onChange}\n          min={min}\n          max={max}\n          disabled={disabled}\n          autoComplete={autoComplete}\n        />\n      </span>\n    </label>\n  );\n};\n\nexport default InputText;\n","import css from './../InputText/InputText.module.scss';\n\nconst Textarea = ({ label, name, value, required, placeholder, onChange }) => {\n  return (\n    <label className={css.Label}>\n      {label && <span className={css.LabelText}>{label}</span>}\n      <span className={css.LabelInput}>\n        <textarea\n          className={`${css.Input} ${css.Textarea}`}\n          name={name}\n          value={value}\n          required={required}\n          placeholder={placeholder}\n          onChange={onChange}\n        />\n      </span>\n    </label>\n  );\n};\n\nexport default Textarea;\n","// extracted by mini-css-extract-plugin\nexport default {\"RadioWrapper\":\"InputRadio_RadioWrapper__+EnQz\",\"Radio\":\"InputRadio_Radio__NNfhK\",\"RadioLabel\":\"InputRadio_RadioLabel__y2o8z\",\"mark-radio\":\"InputRadio_mark-radio__Huu+z\",\"mark-checkbox\":\"InputRadio_mark-checkbox__zpEz3\",\"Mark\":\"InputRadio_Mark__eF-BK\"};","import css from './InputRadio.module.scss';\n\nconst InputRadio = ({ type, name, label, value, required, checked, onChange }) => {\n  return (\n    <label className={css.RadioWrapper}>\n      <input className={css.Radio} type={type} name={name} value={value} required={required} onChange={onChange} checked={checked} />\n      {label && <span className={css.RadioLabel}>{label}</span>}\n      <div className={`${css.Mark} ${css[`mark-${type}`]}`}></div>\n    </label>\n  );\n};\n\nexport default InputRadio;\n","import css from '../InputRadio/InputRadio.module.scss';\n\nconst InputCheckbox = ({ type, name, label, value, required, checked, onChange, readOnly }) => {\n  return (\n    <label className={css.RadioWrapper}>\n      <input\n        className={css.Radio}\n        type={type}\n        name={name}\n        value={value}\n        required={required}\n        checked={checked}\n        onChange={onChange}\n        readOnly={readOnly}\n      />\n      {label && <span className={css.RadioLabel}>{label}</span>}\n      <div className={`${css.Mark} ${css[`mark-${type}`]}`}></div>\n    </label>\n  );\n};\n\nexport default InputCheckbox;\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"InputSelect_Label__kMw6v\",\"open\":\"InputSelect_open__pIyIn\",\"SelectArrow\":\"InputSelect_SelectArrow__CrJ5W\",\"LabelText\":\"InputSelect_LabelText__C9c3A\",\"LabelInput\":\"InputSelect_LabelInput__x01sm\",\"InputSelect\":\"InputSelect_InputSelect__0iclt\",\"Input\":\"InputSelect_Input__4octw\",\"Placeholder\":\"InputSelect_Placeholder__OL06i\",\"Options\":\"InputSelect_Options__IoMK5\",\"Disabled\":\"InputSelect_Disabled__WQcPA\",\"Checked\":\"InputSelect_Checked__OHmvF\"};","import Icon from 'components/Icon/Icon';\nimport { useState, useRef, useEffect } from 'react';\nimport { validateInput } from '../../../../utils/formFunctions';\nimport { useSearchParams } from 'react-router-dom';\nimport css from '../InputSelect/InputSelect.module.scss';\n\nconst InputSelect = ({ type, name, label, required, options, value = '', onChange }) => {\n  const selectInputRef = useRef(null);\n  const selectWrapperRef = useRef(null);\n  const [searchParams] = useSearchParams();\n  const url = searchParams.get('sort') || 'lastview_desc';\n  const [sort, setSort] = useState('lastview');\n  const [order, setOrder] = useState(url.split('_')[1]);\n  const [selectValue, setSelectValue] = useState(value);\n  const [selectValueText, setSelectValueText] = useState(options['sort_' + url.split('_')[0]]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    const urlParams = url.split('_');\n    const sortQuery = urlParams[0];\n    const orderQuery = urlParams[1];\n    setOrder(orderQuery);\n    setSort(sortQuery);\n    setSelectValueText(options['sort_' + url.split('_')[0]]);\n  }, [searchParams, options, url]);\n\n  useEffect(() => {\n    if (selectValue) {\n      validateInput(selectInputRef.current);\n    }\n  }, [selectValue]);\n\n  const handleOptionClick = (key, val) => {\n    setSelectValue(key);\n    onChange && onChange({ key: key, value: val });\n  };\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleClickOutside = event => {\n    if (selectWrapperRef.current && !selectWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <label className={`${css.Label} ${isOpen ? css.open : ''}`} ref={selectWrapperRef}>\n      {label && <span className={css.LabelText}>{label}</span>}\n      <span className={css.LabelInput}>\n        <input type=\"hidden\" data-type={type} name={name} value={selectValue} required={required} ref={selectInputRef} />\n        <div className={css.InputSelect} onClick={handleOpen}>\n          <span className={css.Placeholder}>{selectValueText}</span>\n          <div className={css.SelectArrow}>\n            <Icon name=\"select-arrow\" color=\"#fff\" />\n          </div>\n          {options && (\n            <div className={`${css.Options} ${isOpen ? css.open : ''} custom-scrollbar`}>\n              <ul className={`custom-scrollbar`}>\n                {Object.keys(options).map(key => {\n                  const isChecked = sort === key.split('_')[1] || order === key.split('_')[1];\n                  if (key.includes('hr')) {\n                    return <hr key={key} />;\n                  } else if (key.includes('title')) {\n                    return (\n                      <li key={key} className={css.Disabled}>\n                        {options[key]}\n                      </li>\n                    );\n                  }\n                  return (\n                    <li key={key} datavalue={key} className={isChecked ? css.Checked : ''} onClick={() => handleOptionClick(key, options[key])}>\n                      {options[key]}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          )}\n        </div>\n      </span>\n    </label>\n  );\n};\n\nexport default InputSelect;\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Form_Form__Ulh4k\",\"Freeze\":\"Form_Freeze__c9LYK\"};","import { useState, createContext } from 'react';\nimport { validateForm } from '../../../utils/formFunctions';\nimport css from './Form.module.scss';\n\nconst FormContext = createContext();\n\nconst Form = ({ method = 'post', onSubmit, initialState, freeze = false, children }) => {\n  const [formState, setFormState] = useState(initialState);\n\n  const handleChange = e => {\n    const { name, type, checked, value } = e.target;\n    setFormState(prevState => ({\n      ...prevState,\n      [name]: type !== 'checkbox' ? value : checked,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errorsCount = validateForm(e.target);\n    if (errorsCount > 0) {\n      return;\n    }\n\n    try {\n      await onSubmit(formState);\n    } finally {\n      setFormState(initialState);\n    }\n  };\n\n  return (\n    <FormContext.Provider value={{ formState, handleChange }}>\n      <form action=\"/\" method={method} className={`${css.Form} ${freeze && css.Freeze}`} noValidate onSubmit={handleSubmit}>\n        {children}\n      </form>\n    </FormContext.Provider>\n  );\n};\n\nexport { FormContext };\nexport default Form;\n","import { useContext } from 'react';\nimport { FormContext } from '../Form/Form'; // Импортируем контекст\nimport { validateInput } from '../../../utils/formFunctions';\nimport { InputCheckbox, InputRadio, InputSelect, InputText, InputTextarea } from '../InputTypes';\nimport '../Input/inputValidation.scss';\n\nconst Input = ({\n  type,\n  name,\n  required = null,\n  label = null,\n  placeholder,\n  value = '',\n  options,\n  min = null,\n  max = null,\n  disabled = false,\n  onChange,\n}) => {\n  const { formState, handleChange } = useContext(FormContext);\n  const checked = type === 'radio' ? formState[name] === value : false;\n\n  const inputChange = e => {\n    validateInput(e.target);\n    handleChange && handleChange(e);\n    onChange && onChange(e);\n  };\n\n  return (\n    <>\n      {type === 'hidden' ? (\n        <input type=\"hidden\" name={name} value={formState[name]} />\n      ) : type === 'textarea' ? (\n        <InputTextarea\n          name={name}\n          value={formState[name]}\n          label={label}\n          placeholder={placeholder}\n          required={required}\n          onChange={inputChange}\n          disabled={disabled}\n        />\n      ) : type === 'radio' ? (\n        <InputRadio type={type} name={name} label={label} value={value} checked={checked} required={required} onChange={inputChange} />\n      ) : type === 'checkbox' ? (\n        <InputCheckbox type={type} name={name} label={label} value={value} checked={formState[name]} required={required} onChange={inputChange} />\n      ) : type === 'select' ? (\n        <InputSelect type={type} name={name} label={label} placeholder={placeholder} required={required} options={options} onChange={onChange} />\n      ) : (\n        <InputText\n          type={type}\n          name={name}\n          label={label}\n          value={formState[name]}\n          required={required}\n          placeholder={placeholder}\n          onChange={inputChange}\n          min={min}\n          max={max}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Input;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { logIn } from '../../../redux/auth/operations';\nimport { useAuth } from 'hooks';\n\nimport { useEffect } from 'react';\nimport { usePopup } from 'contexts/PopupContext';\nimport { Button, ButtonsList } from 'components/Buttons';\nimport { Form, Input } from 'components/Forms';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { error, loading } = useAuth();\n  const { popupOpen } = usePopup();\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  useEffect(() => {\n    if (error) {\n      popupOpen('error', 'Access denied', error);\n    }\n  }, [error, popupOpen]);\n\n  const handleSubmit = ({ email, password }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    ).then(response => {\n      if (response.meta.requestStatus === 'fulfilled') {\n        navigate('/');\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} initialState={initialState} freeze={loading}>\n      <Input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n      <Input type=\"password\" name=\"password\" placeholder=\"Password\" min=\"6\" required />\n      <ButtonsList>\n        <Button variant=\"white\" full isLoading={loading}>\n          Log in\n        </Button>\n      </ButtonsList>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","//redux\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { register, logIn } from '../../../redux/auth/operations';\nimport { useAuth } from 'hooks';\n\n//components\nimport { Button } from 'components/Buttons';\nimport { usePopup } from 'contexts/PopupContext';\nimport { useEffect } from 'react';\nimport { Form, Input, Fieldset } from 'components/Forms';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { error, loading } = useAuth();\n  const { popupOpen } = usePopup();\n  const initialState = {\n    email: '',\n    password: '',\n    subscribe: false,\n  };\n\n  useEffect(() => {\n    if (error) {\n      popupOpen('error', 'Registration failed', error);\n    }\n  }, [error, popupOpen]);\n\n  const handleSubmit = ({ name, email, password, subscribe }) => {\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n        subscribe,\n      })\n    ).then(response => {\n      if (response.meta.requestStatus === 'fulfilled') {\n        dispatch(\n          logIn({\n            email,\n            password,\n          })\n        ).then(response => {\n          if (response.meta.requestStatus === 'fulfilled') {\n            navigate('/');\n          }\n        });\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} initialState={initialState} freeze={loading}>\n      <Input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n      <Input type=\"password\" name=\"password\" placeholder=\"Password\" min=\"6\" required />\n\n      <Fieldset ta=\"center\">\n        <Input type=\"checkbox\" name=\"subscribe\" label=\"Subscribe to UniUXtips and updates\" value=\"ok\" />\n      </Fieldset>\n\n      <Button variant=\"white\" full isLoading={loading}>\n        Create account\n      </Button>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import { useState } from 'react';\nimport { Button, ButtonsList } from 'components/Buttons';\nimport { Form, Input } from 'components/Forms';\n\nconst ResetPasswordForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const initialState = {\n    email: '',\n  };\n\n  const handleSubmit = data => {\n    setIsLoading(true);\n    setTimeout(() => {\n      console.log(data);\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} initialState={initialState} freeze={isLoading}>\n      <Input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n      <ButtonsList>\n        <Button variant=\"white\" full isLoading={isLoading}>\n          Reset password\n        </Button>\n      </ButtonsList>\n    </Form>\n  );\n};\n\nexport default ResetPasswordForm;\n","import { useState } from 'react';\nimport { usePopup } from 'contexts/PopupContext';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, ButtonsList } from 'components/Buttons';\nimport { Form, Input } from 'components/Forms';\nimport { projectOperation } from 'api';\n\nconst AddNewProjectForm = () => {\n  const { popupOpen } = usePopup();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const initialState = {\n    link: '',\n  };\n\n  const handleSubmit = async data => {\n    setIsLoading(true);\n    try {\n      await projectOperation.addNew(data);\n      navigate('/');\n    } catch (error) {\n      popupOpen('error', `Error ${error.response.status} (${error.response.statusText})`, error.response.data.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} initialState={initialState} freeze={isLoading}>\n      <Input type=\"url\" name=\"link\" placeholder=\"Link to Figma project\" required />\n      <ButtonsList>\n        <Button full isLoading={isLoading}>\n          Create test\n        </Button>\n      </ButtonsList>\n    </Form>\n  );\n};\n\nexport default AddNewProjectForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"AddTaskForm\":\"AddTaskForm_AddTaskForm__mNP9o\"};","import { Button } from 'components/Buttons';\nimport { useProject } from 'hooks';\nimport css from './AddTaskForm.module.scss';\n\nconst AddTaskForm = () => {\n  const { addNewTask, loading } = useProject();\n\n  const handleSubmit = () => {\n    addNewTask();\n  };\n\n  return (\n    <div className={css.AddTaskForm}>\n      <Button variant=\"white\" full isLoading={loading} onClick={handleSubmit}>\n        Add task\n      </Button>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n","import { useDispatch } from 'react-redux';\nimport { updateUser } from '../../../redux/auth/operations';\n\nimport { useAuth } from 'hooks';\nimport { useState, useEffect } from 'react';\nimport { usePopup } from 'contexts/PopupContext';\nimport { Button, ButtonsList } from 'components/Buttons';\nimport { Form, Input, Fieldset } from 'components/Forms';\n\nconst ProfileForm = ({ closeProfile }) => {\n  const dispatch = useDispatch();\n  const { user, error, loading } = useAuth();\n  const { popupOpen } = usePopup();\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  const initialState = {\n    name: user.name,\n    email: user.email,\n    subscribe: user.subscribe,\n    oldpassword: '',\n    password: '',\n  };\n\n  useEffect(() => {\n    if (error) {\n      popupOpen('error', 'File upload error!', error);\n    }\n  }, [error, popupOpen]);\n\n  const handleSubmit = ({ name, email, subscribe, oldpassword, password }) => {\n    if (oldpassword && !password) {\n      popupOpen('error', 'Update error!', 'Set a new password to change.');\n      return;\n    }\n    if (!oldpassword && password) {\n      popupOpen('error', 'Update error!', 'To change your password, your current password is required.');\n      return;\n    }\n    dispatch(\n      updateUser({\n        name,\n        email,\n        subscribe,\n        oldpassword,\n        password,\n      })\n    ).then(response => {\n      if (response.meta.requestStatus === 'fulfilled') {\n        popupOpen('confirm', 'Profile updated!', 'The new data has been successfully saved to your profile.');\n        setIsButtonDisabled(true);\n        closeProfile();\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const form = e.target.closest('form');\n    const formInputs = form.querySelectorAll('input'); // Получаем все input в форме\n    const formObject = {};\n\n    formInputs.forEach(inputElement => {\n      if (inputElement.type === 'checkbox') {\n        formObject[inputElement.name] = inputElement.checked;\n      } else {\n        formObject[inputElement.name] = inputElement.value;\n      }\n    });\n\n    const isFormDifferent = (formObject, initialState) => {\n      for (const [key, value] of Object.entries(formObject)) {\n        if (value !== initialState[key]) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    if (isFormDifferent(formObject, initialState)) {\n      setIsButtonDisabled(false);\n      return;\n    }\n    setIsButtonDisabled(true);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} initialState={initialState} freeze={loading}>\n      <Fieldset col=\"1\">\n        <Input type=\"text\" name=\"name\" placeholder=\"Name\" required onChange={handleChange} min={2} />\n        <Input type=\"email\" name=\"email\" placeholder=\"Email\" disabled />\n        <Input type=\"checkbox\" name=\"subscribe\" label=\"Subscribed for updates\" value=\"ok\" onChange={handleChange} />\n      </Fieldset>\n\n      <Fieldset label=\"Reset password\" col=\"1\">\n        <Input type=\"password\" name=\"oldpassword\" placeholder=\"Your password\" onChange={handleChange} />\n        <Input type=\"password\" name=\"password\" placeholder=\"New password\" onChange={handleChange} />\n      </Fieldset>\n\n      <ButtonsList>\n        <Button variant=\"white\" full disabled={isButtonDisabled} isLoading={loading}>\n          Save\n        </Button>\n      </ButtonsList>\n    </Form>\n  );\n};\n\nexport default ProfileForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"AvatarForm_Label__UrLH6\",\"Loading\":\"AvatarForm_Loading__Hw3ZP\",\"rotate\":\"AvatarForm_rotate__22JCQ\",\"PersonalInfo\":\"AvatarForm_PersonalInfo__2XNpZ\"};","import { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks';\nimport { useState } from 'react';\nimport { updateAvatar } from '../../../redux/auth/operations';\n\nimport Icon from 'components/Icon/Icon';\nimport css from './AvatarForm.module.scss';\n\nconst AvatarForm = () => {\n  const dispatch = useDispatch();\n  const [isHovered, setIsHovered] = useState(false);\n  const { user, avatarLoading, BASE } = useAuth();\n\n  const uploadPhoto = async e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n    dispatch(updateAvatar(file));\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <>\n      <form action=\"/\" method=\"post\" className={css.AvatarForm} noValidate>\n        <label className={`${css.Label} ${avatarLoading && css.Loading}`} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n          <input type=\"file\" name=\"avatarUrl\" onChange={uploadPhoto} />\n          <img src={user.avatarUrl.includes('http') ? user.avatarUrl : `${BASE}${user.avatarUrl}`} alt=\"Uniux\" />\n          <Icon name=\"avatar_plus\" />\n        </label>\n      </form>\n      <div className={css.PersonalInfo}>\n        <p>{user.name}</p>\n        <span>{isHovered ? 'Change photo' : user.email}</span>\n      </div>\n    </>\n  );\n};\n\nexport default AvatarForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"Fieldset\":\"Fieldset_Fieldset__u1blM\",\"left\":\"Fieldset_left__uTzNh\",\"center\":\"Fieldset_center__86aH2\",\"col-auto\":\"Fieldset_col-auto__oZrz5\",\"col-1\":\"Fieldset_col-1__OhQLP\",\"col-2\":\"Fieldset_col-2__59NX+\",\"col-3\":\"Fieldset_col-3__8xG+e\",\"col-4\":\"Fieldset_col-4__+eKbF\",\"col-5\":\"Fieldset_col-5__mv7L0\",\"FieldsetLabel\":\"Fieldset_FieldsetLabel__SckyM\"};","import css from './Fieldset.module.scss';\n\nconst Fieldset = ({ col = 'auto', label, ta = 'left', children }) => {\n  return (\n    <fieldset className={`${css.Fieldset} ${css[`col-${col}`]} ${css[ta]}`}>\n      {label && <legend className={css.FieldsetLabel}>{label}</legend>}\n      {children}\n    </fieldset>\n  );\n};\n\nexport default Fieldset;\n","// extracted by mini-css-extract-plugin\nexport default {\"FormContainer\":\"FormContainer_FormContainer__gyc93\"};","import css from './FormContainer.module.scss';\n\nconst FormContainer = ({ children }) => {\n  return <div className={css.FormContainer}>{children}</div>;\n};\n\nexport default FormContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchForm_SearchForm__UXaqQ\",\"Label\":\"SearchForm_Label__FVi0z\",\"Input\":\"SearchForm_Input__POQnP\",\"Icon\":\"SearchForm_Icon__WHIvX\"};","import { debounce } from 'utils/debounce';\n\nexport const changeQueryString = debounce((searchText, param, func) => {\n  func(params => {\n    // Получаем текущие параметры\n    const currentParams = new URLSearchParams(params);\n\n    // Устанавливаем параметр q, очищаем его если searchText пустой\n    if (searchText.trim() !== '') {\n      currentParams.set(param, searchText.trim());\n    } else {\n      currentParams.delete(param);\n    }\n\n    return currentParams;\n  });\n}, 500);\n","import Icon from 'components/Icon/Icon';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './SearchForm.module.scss';\nimport { changeQueryString } from 'utils/changeQueryString';\nimport { useState, useEffect } from 'react';\n\nconst SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState(searchParams.get('q') || '');\n\n  const handleInputChange = e => {\n    const searchText = e.target.value;\n    setSearch(searchText); // Обновляем состояние инпута мгновенно\n    changeQueryString(searchText, 'q', setSearchParams); // Вызываем debounce для обновления параметров с задержкой\n  };\n\n  // Синхронизируем значение инпута с параметрами поиска при изменении URL\n  useEffect(() => {\n    setSearch(searchParams.get('q') || '');\n  }, [searchParams]);\n\n  return (\n    <div className={css.SearchForm}>\n      <label className={css.Label}>\n        <input type=\"text\" name=\"q\" className={css.Input} placeholder=\"Search for anything\" value={search} onChange={handleInputChange} />\n        <div className={css.Icon}>\n          <Icon name=\"search\" size=\"12\" />\n        </div>\n      </label>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"SortForm\":\"SortForm_SortForm__ACcQn\"};","import { Input, Form } from '..';\nimport { useSearchParams } from 'react-router-dom';\nimport { changeQueryString } from 'utils/changeQueryString';\nimport { useState, useEffect } from 'react';\nimport css from './SortForm.module.scss';\n\nconst SortForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [sort, setSort] = useState(searchParams.get('sort') || 'lastview_desc');\n\n  const selectChange = ({ key }) => {\n    const sortRequest = key.includes('sort_') ? key.split('_')[1] : sort.split('_')[0];\n    const orderRequest = key.includes('order_') ? key.split('_')[1] : sort.split('_')[1];\n    changeQueryString(`${sortRequest}_${orderRequest}`, 'sort', setSearchParams);\n  };\n\n  // Синхронизируем значение инпута с параметрами поиска при изменении URL\n  useEffect(() => {\n    setSort(searchParams.get('sort') || 'lastview_desc');\n  }, [searchParams]);\n\n  return (\n    <div className={css.SortForm}>\n      <Form>\n        <Input\n          type=\"select\"\n          name=\"sort\"\n          required\n          value={sort}\n          options={{\n            title: 'Sort By',\n            sort_lastview: 'Last viewed',\n            sort_views: 'Most popular',\n            sort_name: 'Alphabetical',\n            sort_createdAt: 'Date created',\n            hr: '------------------',\n            title2: 'Order',\n            order_asc: 'Ascending',\n            order_desc: 'Descending',\n          }}\n          onChange={selectChange}\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default SortForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"CopyLink\":\"CopyLink_CopyLink__3su-R\",\"Button\":\"CopyLink_Button__x0NwQ\"};","import React, { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\nimport css from './CopyLink.module.scss';\nimport inputCss from '../InputTypes/InputText/InputText.module.scss';\n\nconst CopyLink = ({ type = 'text', name = '', value = '' }) => {\n  const [copySuccess, setCopySuccess] = useState(false);\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(value).then(() => {\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 1500);\n    });\n  };\n\n  return (\n    <div className={css.CopyLink}>\n      {/* {children} */}\n      <input type={type} name={name} value={value} className={inputCss.Input} readOnly />\n      <div className={css.Button} onClick={handleClick}>\n        <Icon name={copySuccess ? 'confirm' : 'copy'} color=\"var(--green)\" size={copySuccess ? '22' : '16'} />\n      </div>\n    </div>\n  );\n};\n\nexport default CopyLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"ChangeTaskNameForm\":\"ChangeTaskNameForm_ChangeTaskNameForm__wdj6t\",\"roll\":\"ChangeTaskNameForm_roll__faYql\",\"Loading\":\"ChangeTaskNameForm_Loading__atlIO\"};","import { useState } from 'react';\nimport css from './ChangeTaskNameForm.module.scss';\nimport { tasksOperations } from 'api';\n\nconst ChangeTaskNameForm = ({ taskId, value }) => {\n  const [taskName, setTaskName] = useState(value);\n  const [loading, setLoading] = useState(false);\n  const [oldName, setOldName] = useState(value);\n\n  const updateName = async name => {\n    setLoading(true);\n    try {\n      await tasksOperations.updateTask(taskId, 'name', { name: name });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setTimeout(() => {\n        setLoading(false);\n      }, 300);\n    }\n  };\n\n  const handleNameChange = newName => {\n    if (oldName.trim() === newName.trim() || newName === '') {\n      setTaskName(oldName);\n      return;\n    }\n    setOldName(newName.trim().replace(/\\s+/g, ' '));\n    setTaskName(newName.trim().replace(/\\s+/g, ' '));\n\n    const currentTaskName = taskName.trim().replace(/\\s+/g, ' ');\n    updateName(currentTaskName);\n  };\n\n  const handleChange = e => {\n    setTaskName(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleNameChange(e.target.elements.name.value);\n  };\n\n  const handleBlur = e => {\n    handleNameChange(e.target.value);\n  };\n\n  return (\n    <div className={`${css.ChangeTaskNameForm} ${loading && css.Loading}`}>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" value={taskName} onChange={handleChange} onBlur={handleBlur} autoComplete=\"off\" />\n      </form>\n    </div>\n  );\n};\n\nexport default ChangeTaskNameForm;\n","let debounceTimeout;\nexport const debounce = (func, delay) => {\n  return (...args) => {\n    clearTimeout(debounceTimeout);\n    debounceTimeout = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n};\n","const useErrorTextMasseges = true;\n\nconst nameRegex = /[^A-zА-яЁё0-9+ ()-]/;\nconst phoneRegex = /^\\+49\\d{9}$/;\nconst emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).*$/;\nconst linkRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})(\\/[^\\s]*)?$/;\n\nconst errors = {\n  empty: 'Field cannot be empty',\n  name: 'Numbers are not allowed',\n  phone: 'Wrong phone format',\n  email: 'Wrong e-mail format',\n  password: 'Password must include uppercase letters and numbers',\n  select: 'Nothing has been selected',\n  checkbox: 'This point is required',\n  link: 'This is not a valid URL',\n};\n\nexport const validateInput = input => {\n  let errorText = '';\n  const currentInput = input;\n  const inputWrapper = currentInput.type === 'radio' ? currentInput.closest('fieldset') : currentInput.closest('label');\n  const textErrorEl = inputWrapper.querySelector('.labelError');\n\n  // add Error\n  const addError = text => {\n    errorText = text;\n    const currentInputs = inputWrapper.querySelectorAll('[required]');\n    currentInputs.forEach(requiredInput => {\n      requiredInput.classList.add('invalid');\n      requiredInput.classList.remove('valid');\n    });\n    addErrorText(text);\n  };\n\n  // delete Error\n  const deleteError = () => {\n    currentInput.classList.remove('invalid');\n    currentInput.classList.add('valid');\n    deleteErrorText();\n  };\n\n  // add error Text\n  const addErrorText = text => {\n    if (useErrorTextMasseges) {\n      if (textErrorEl) {\n        textErrorEl.innerHTML = text;\n        return;\n      }\n      inputWrapper.insertAdjacentHTML('beforeend', `<span class=\"labelError\">${text}</span>`);\n      setTimeout(() => inputWrapper.querySelector('.labelError').classList.add('active'), 1);\n    }\n  };\n\n  // delete error Text\n  const deleteErrorText = () => {\n    if (textErrorEl) {\n      textErrorEl.classList.remove('active');\n      setTimeout(() => {\n        textErrorEl.remove();\n      }, 300);\n    }\n  };\n\n  // radios in grup validate\n  const radiosValidate = () => {\n    const allRadios = inputWrapper.querySelectorAll('input[type=\"radio\"]');\n    const checkedRadios = inputWrapper.querySelectorAll('input[type=\"radio\"]:checked');\n\n    if (checkedRadios.length) {\n      allRadios.forEach(radio => {\n        radio.classList.remove('invalid');\n        radio.removeAttribute('required');\n      });\n      deleteErrorText();\n      return;\n    }\n    addError(errors.select);\n  };\n\n  // validate inputs by situations and types\n  if (currentInput.required) {\n    //select\n    if (!currentInput.value && currentInput.dataset.type === 'select') {\n      addError(errors.select);\n      return errorText;\n    }\n    //Empty field\n    if (!currentInput.value.trim()) {\n      addError(errors.empty);\n      return errorText;\n    }\n    //Minimum characters count\n    if (currentInput.min) {\n      if (currentInput.type !== 'number' && currentInput.min > currentInput.value.length) {\n        addError(`Minimum ${currentInput.min} characters`);\n        return errorText;\n      }\n      if (currentInput.type === 'number' && Number(currentInput.value) < currentInput.min) {\n        addError(`Minimal number is ${currentInput.min}`);\n        return errorText;\n      }\n    }\n    //Maximum characters count\n    if (currentInput.max) {\n      if (currentInput.type !== 'number' && currentInput.max < currentInput.value.length) {\n        addError(`Maximum ${currentInput.max} characters`);\n        return errorText;\n      }\n      if (currentInput.type === 'number' && Number(currentInput.value) > currentInput.max) {\n        addError(`Maximal number is ${currentInput.max}`);\n        return errorText;\n      }\n    }\n    //Name\n    if (currentInput.name === 'name' && nameRegex.test(currentInput.value)) {\n      addError(errors.name);\n      return errorText;\n    }\n    //phone\n    if (currentInput.type === 'tel' && !phoneRegex.test(currentInput.value)) {\n      addError(errors.phone);\n      return errorText;\n    }\n    //email\n    if (currentInput.type === 'email' && !emailRegex.test(currentInput.value)) {\n      addError(errors.email);\n      return errorText;\n    }\n    //password\n    if (currentInput.type === 'password' && !passwordRegex.test(currentInput.value)) {\n      addError(errors.password);\n      return errorText;\n    }\n    //checkboxes\n    if (currentInput.type === 'checkbox' && currentInput.checked === false) {\n      addError(errors.checkbox);\n      return errorText;\n    }\n    //radio\n    if (currentInput.type === 'radio') {\n      radiosValidate();\n      return errorText;\n    }\n    //link\n    if (currentInput.type === 'url' && !linkRegex.test(currentInput.value)) {\n      addError(errors.link);\n      return errorText;\n    }\n  }\n\n  if (!errorText) {\n    deleteError();\n  }\n};\n\n// validate Form\nexport const validateForm = form => {\n  let errorsCount = 0;\n  const formData = form.querySelectorAll('[required]');\n  formData.forEach(input => {\n    const error = validateInput(input);\n    if (error) {\n      errorsCount += 1;\n    }\n  });\n  return errorsCount;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"InputText_Label__VMd7k\",\"open\":\"InputText_open__Ky8YX\",\"SelectArrow\":\"InputText_SelectArrow__JSDL4\",\"LabelText\":\"InputText_LabelText__t5553\",\"LabelInput\":\"InputText_LabelInput__49FgB\",\"Input\":\"InputText_Input__IiQcN\",\"Textarea\":\"InputText_Textarea__NOkRW\",\"InputText\":\"InputText_InputText__Ca9+l\",\"Placeholder\":\"InputText_Placeholder__iBOwU\"};"],"names":["_ref","type","name","value","label","required","placeholder","min","max","onChange","_ref$disabled","disabled","autoComplete","_jsxs","className","css","children","_jsx","concat","checked","readOnly","options","_ref$value","selectInputRef","useRef","selectWrapperRef","_useSearchParams","useSearchParams","searchParams","_slicedToArray","url","get","_useState","useState","_useState2","sort","setSort","_useState3","split","_useState4","order","setOrder","_useState5","_useState6","selectValue","setSelectValue","_useState7","_useState8","selectValueText","setSelectValueText","_useState9","_useState10","isOpen","setIsOpen","useEffect","urlParams","sortQuery","orderQuery","validateInput","current","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","ref","onClick","Icon","color","Object","keys","map","key","isChecked","includes","datavalue","val","handleOptionClick","FormContext","createContext","_ref$method","method","onSubmit","initialState","_ref$freeze","freeze","formState","setFormState","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","e","_context","prev","next","preventDefault","validateForm","abrupt","finish","stop","_x","apply","arguments","Provider","handleChange","_e$target","prevState","_objectSpread","_defineProperty","action","noValidate","_ref$required","_ref$label","_ref$min","_ref$max","_useContext","useContext","inputChange","_Fragment","InputTextarea","InputRadio","InputCheckbox","InputSelect","InputText","dispatch","useDispatch","navigate","useNavigate","_useAuth","useAuth","error","loading","popupOpen","usePopup","Form","email","password","logIn","then","response","meta","requestStatus","Input","ButtonsList","Button","variant","full","isLoading","subscribe","register","Fieldset","ta","setIsLoading","data","setTimeout","console","log","projectOperation","t0","status","statusText","message","link","_useProject","useProject","addNewTask","closeProfile","user","isButtonDisabled","setIsButtonDisabled","oldpassword","formInputs","closest","querySelectorAll","formObject","forEach","inputElement","_i","_Object$entries","entries","length","_Object$entries$_i","isFormDifferent","updateUser","col","isHovered","setIsHovered","avatarLoading","BASE","uploadPhoto","file","files","updateAvatar","onMouseEnter","onMouseLeave","src","avatarUrl","alt","_ref$col","_ref$ta","changeQueryString","debounce","searchText","param","func","params","currentParams","URLSearchParams","trim","set","delete","_useSearchParams2","setSearchParams","search","setSearch","size","title","sort_lastview","sort_views","sort_name","sort_createdAt","hr","title2","order_asc","order_desc","sortRequest","orderRequest","_ref$type","_ref$name","copySuccess","setCopySuccess","inputCss","navigator","clipboard","writeText","taskId","taskName","setTaskName","setLoading","oldName","setOldName","updateName","tasksOperations","handleNameChange","newName","replace","currentTaskName","elements","onBlur","debounceTimeout","delay","_len","args","Array","_key","clearTimeout","nameRegex","phoneRegex","emailRegex","passwordRegex","linkRegex","errors","input","errorText","currentInput","inputWrapper","textErrorEl","querySelector","addError","text","requiredInput","classList","add","remove","addErrorText","innerHTML","insertAdjacentHTML","deleteErrorText","dataset","Number","test","allRadios","radio","removeAttribute","radiosValidate","form","errorsCount"],"sourceRoot":""}